321 CA Grigorie Ruxandra
ruxi.grigorie@gmail.com

# OOP project, part 2
----------------------


## New features
----------------

### Angels
-----------

    * I have implemented the angels as visitors who execute an operation on heroes.

    * The base class (AAngel) is extended in the 10 types of angels.


### Strategies
---------------

    * I have implemented the strategies as a class consisting of a single method ('chooseStrategy')
    which chooses the appropriate strategy for a given hero, using each hero's particular constants.
    The different types of strategies are instantiated with a factory (StrategiesFactory).

### Writer
-----------

    * I have added a class (Writer) which has the role of displaying the output.


## Use of Observer design pattern
----------------------------------

    * I've used this design pattern in the following way:

        Observer |  The Great Magician
        ---------|--------------------
        Subjects |  Angels, Heroes

    * The Great Magician (observer) is notified when one of his subjects (hero / angel) "changes"
    his state. This change consists in:

        ** Hero: is killed by an angel / hero
        ** Angel: executes an action on a hero / spawns on the map

    * The subject notifies the observer by "passing" a message describing the occurred change, which
    is further displayed at output by the observer.
